{"version":3,"sources":["img/logoNav.svg","components/AppNavbar.js","utility.js","components/SearchBox.js","data/CountryMap.js","components/GoogleCharts.js","data/countriesForChart.js","pages/HomePage.js","img/home.jpg","img/logo.svg","pages/Login.js","pages/Signup.js","pages/Maps.js","components/Marker.js","components/GMap.js","components/Autocomplete.js","data/Pin.js","pages/EditMapList.js","pages/Lists.js","App.js","reportWebVitals.js","index.js"],"names":["AppNavbar","props","state","login","this","user","Nav","Link","href","logout","onClick","userName","name","Navbar","collapseOnSelect","expand","bg","variant","sticky","Brand","className","src","logoNav","alt","Toggle","aria-controls","Collapse","id","React","Component","checkUserValidity","window","location","getLatlngById","countries","find","country","country_code","latlng","SearchBox","result","map","ListGroup","Item","action","onResultSelected","Form","Group","Control","type","value","search","placeholder","placeHolder","onChange","e","onSearchChanged","target","CountryMap","lat","lng","capital","date","subTitle","free","code","GoogleCharts","google","onMapClick","selectedId","chartWrapper","getChart","getSelection","length","data","row","setParameters","console","log","zoom","chartType","mapsApiKey","width","regionClick","options","backgroundColor","defaultColor","chartEvents","eventName","callback","HomePage","searchTextChanged","filter","filteredList","toLowerCase","includes","setState","input","chooseACountry","error","addMap","curr","maps","moment","format","freeText","obj","updateSubTitle","updateFreeText","Container","fluid","Row","cla","Col","sm","md","lg","Card","Header","Text","as","rows","Button","allCountries","Login","updatePassword","pwd","updateEmail","email","validateLogin","validUser","userslist","alert","span","offset","logo","Label","to","Signup","createNewUser","newUser","addUser","controlId","Maps","goTo","createlist","list","Title","Subtitle","makeListOfChosenCountries","ChosenCountries","Marker","text","category","GMap","createMarkers","places","place","title","address","addres","markers","bootstrapURLKeys","key","height","defaultCenter","center","defaultZoom","Autocomplete","apiKey","onPlaceSelected","Geocode","setApiKey","fromAddress","formatted_address","then","response","results","geometry","adress","marker","updateAdress","types","componentRestrictions","Pin","rate","uuidv4","EditMapList","addToMap","importance","addPlace","changeImportance","match","params","custom","class","checked","htmlFor","withRouter","Lists","showItem","handleClose","modalKind","isModalOpen","isMiniModalOpen","chooseRate","checkValidity","Modal","show","onHide","closeButton","Body","url","modalItem","Footer","App","userObj","concat","addData","currentMap","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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D,CAAC,gBACD,CAAC,eACD,CAAC,WACD,CAAC,QACD,CAAC,SACD,CAAC,cACD,CAAC,YACD,CAAC,QACD,CAAC,iBACD,CAAC,eACD,CAAC,aACD,CAAC,YACD,CAAC,YACD,CAAC,eACD,CAAC,SACD,CAAC,WACD,CAAC,aACD,CAAC,cACD,CAAC,cACD,CAAC,sBACD,CAAC,UACD,CAAC,YACD,CAAC,MACD,CAAC,aACD,CAAC,QACD,CAAC,SACD,CAAC,UACD,CAAC,WACD,CAAC,SACD,CAAC,SACD,CAAC,SACD,CAAC,cACD,CAAC,WACD,CAAC,QACD,CAAC,UACD,CAAC,SACD,CAAC,UACD,CAAC,4BACD,CAAC,WACD,CAAC,kBACD,CAAC,qBACD,CAAC,eACD,CAAC,UACD,CAAC,WACD,CAAC,YACD,CAAC,cACD,CAAC,oBACD,CAAC,WACD,CAAC,UACD,CAAC,YACD,CAAC,UACD,CAAC,WACD,CAAC,WACD,CAAC,iBACD,CAAC,UACD,CAAC,SACD,CAAC,UACD,CAAC,cACD,CAAC,YACD,CAAC,WACD,CAAC,aACD,CAAC,WACD,CAAC,0BACD,CAAC,WACD,CAAC,SACD,CAAC,cACD,CAAC,SACD,CAAC,UACD,CAAC,UACD,CAAC,YACD,CAAC,YACD,CAAC,WACD,CAAC,cACD,CAAC,gBACD,CAAC,aACD,CAAC,cACD,CAAC,wBACD,CAAC,aACD,CAAC,WACD,CAAC,WACD,CAAC,eACD,CAAC,cACD,CAAC,aACD,CAAC,aACD,CAAC,UACD,CAAC,SACD,CAAC,UACD,CAAC,WACD,CAAC,aACD,CAAC,cACD,CAAC,aACD,CAAC,cACD,CAAC,YACD,CAAC,WACD,CAAC,WACD,CAAC,SACD,CAAC,SACD,CAAC,WACD,CAAC,YACD,CAAC,UACD,CAAC,QACD,CAAC,uBACD,CAAC,aACD,CAAC,WACD,CAAC,WACD,CAAC,QACD,CAAC,SACD,CAAC,QACD,CAAC,eACD,CAAC,UACD,CAAC,YACD,CAAC,SACD,CAAC,YACD,CAAC,UACD,CAAC,WACD,CAAC,YACD,CAAC,aACD,CAAC,WACD,CAAC,e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","file":"static/js/main.98d0c6db.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logoNav.efbdf2f5.svg\";","import React from 'react'\r\nimport { Nav, Navbar } from \"react-bootstrap\";\r\nimport logoNav from '../img/logoNav.svg';\r\n\r\nclass AppNavbar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n\r\n    }\r\n    render() {\r\n\r\n        const login = (!this.props.user) ? <Nav.Link href=\"#/login\" >Sign in</Nav.Link> : null;\r\n        const logout = this.props.user ? <Nav.Link href=\"#/home\"\r\n            onClick={() => this.props.logout()}>Sign out</Nav.Link> : null;\r\n        const userName = (this.props.user) ? <Nav.Link href=\"#/login\" >Hello {this.props.user.name}</Nav.Link> : null;\r\n\r\n        return (\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" sticky=\"top\">\r\n                <Navbar.Brand className=\"logo-nav\"><img src={logoNav} alt=\"Logo\" /></Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"#/home\">Home</Nav.Link>\r\n                        {/* <Nav.Link href=\"/\r\n                        #/create-map\">CreateMap</Nav.Link> */}\r\n                        <Nav.Link href=\"#/maps\">Maps list</Nav.Link>\r\n                    </Nav>\r\n                    <Nav>\r\n                        {login}\r\n                        {logout}\r\n                        {userName}\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default AppNavbar;","import countries from './data/countries.json'\r\n\r\nexport const checkUserValidity = (user) => {\r\n    if (!user) {\r\n        window.location.href = '#/login'\r\n    }\r\n}\r\n\r\nexport const getLatlngById = (id) => {\r\n    return countries.find(country => country.country_code === id).latlng;\r\n}\r\n","import React from \"react\";\r\nimport { Form, ListGroup } from \"react-bootstrap\";\r\nimport { checkUserValidity } from \"../utility\";\r\n\r\nclass SearchBox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const result = this.props.result\r\n        let countries = ''\r\n        if (result) {\r\n            countries = result.map((country) => {\r\n                return (\r\n                    <ListGroup.Item\r\n                        action key={country.name}\r\n                        onClick={() => { this.props.onResultSelected(country.name) }}\r\n                    >{country.name}</ListGroup.Item>\r\n                )\r\n            })\r\n        }\r\n\r\n        return (\r\n\r\n            <Form.Group>\r\n                <Form.Control\r\n                    type=\"text\"\r\n                    value={this.props.search}\r\n                    placeholder={this.props.placeHolder}\r\n                    onChange={(e) => { this.props.onSearchChanged(e.target.value) }} />\r\n                <ListGroup>\r\n                    {countries}\r\n                </ListGroup>\r\n            </Form.Group>\r\n        )\r\n    }\r\n}\r\nexport default SearchBox","class CountryMap {\r\n    constructor(country,id, lat, lng, capital, date, subTitle, free) {\r\n        this.country = country;\r\n        this.code = id;\r\n        this.lat = lat;\r\n        this.lng = lng;\r\n        this.capital = capital\r\n        this.date = date;\r\n        this.subTitle = subTitle;\r\n        this.free = free;\r\n    }\r\n}\r\n\r\nexport default CountryMap","import React from \"react\";\r\nimport Chart from \"react-google-charts\";\r\n\r\nlet google = window.google;\r\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\r\n\r\n\r\nclass GoogleCharts extends React.Component {\r\n  constructor(props) {\r\n    // const geocoder = new google.maps.Geocoder();\r\n    super(props);\r\n    this.state = {\r\n\r\n      zoom: 1\r\n    }\r\n  }\r\n\r\n  onMapClick = (e) => {\r\n    // Code from here https://stackoverflow.com/questions/62135668/how-to-call-a-click-event-on-react-geo-chart\r\n    let selectedId;\r\n    try {\r\n      selectedId = e.chartWrapper.getChart().getSelection();\r\n\r\n\r\n    }\r\n    catch (e) {\r\n      return;\r\n    }\r\n    if (selectedId.length) {\r\n      if (this.props.data[selectedId[0].row + 1]) {\r\n        this.props.setParameters(this.props.data[selectedId[0].row + 1])\r\n      }\r\n    } else {\r\n      console.log(\"No Country to show \");\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"g-map\">\r\n\r\n        <Chart className=\"mb-2\"\r\n          chartType=\"GeoChart\"\r\n          mapsApiKey=\"AIzaSyAehE6kMUhBdd8FMJ5A-3OVG1q6S3c5h-8\"\r\n           width={'100%'}\r\n          regionClick={this.onMapClick}\r\n          options={{\r\n            backgroundColor: '127597',\r\n            defaultColor: \"bee9e8\",\r\n          }}\r\n\r\n          data={this.props.data}\r\n\r\n          chartEvents={[\r\n            { eventName: 'select', callback: this.onMapClick }\r\n          ]}\r\n        />\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleCharts;","const countries = [\r\n\t['Country'],\r\n\t[\"Bhutan\"],\r\n\t[\"Democratic Republic of the Congo\"],\r\n\t[\"Liechtenstein\"],\r\n\t[\"Maldives\"],\r\n\t[\"Sudan\"],\r\n\t[\"Zimbabwe\"],\r\n\t[\"Mauritania\"],\r\n\t[\"Mozambique\"],\r\n\t[\"Nigeria\"],\r\n\t[\"Swaziland\"],\r\n\t[\"Tanzania\"],\r\n\t[\"Iraq\"],\r\n\t[\"Guyana\"],\r\n\t[\"Namibia\"],\r\n\t[\"Senegal\"],\r\n\t[\"Turkmenistan\"],\r\n\t[\"Afghanistan\"],\r\n\t[\"Andorra\"],\r\n\t[\"Fiji\"],\r\n\t[\"Gabon\"],\r\n\t[\"Uzbekistan\"],\r\n\t[\"Cameroon\"],\r\n\t[\"Cuba\"],\r\n\t[\"Faroe Islands\"],\r\n\t[\"El Salvador\"],\r\n\t[\"Caribbean\"],\r\n\t[\"Ethiopia\"],\r\n\t[\"Mongolia\"],\r\n\t[\"Puerto Rico\"],\r\n\t[\"Samoa\"],\r\n\t[\"Myanmar\"],\r\n\t[\"Nicaragua\"],\r\n\t[\"Seychelles\"],\r\n\t[\"Tajikistan\"],\r\n\t[\"Dominican Republic\"],\r\n\t[\"Guinea\"],\r\n\t[\"Barbados\"],\r\n\t[\"CI\"],\r\n\t[\"Greenland\"],\r\n\t[\"Laos\"],\r\n\t[\"Libya\"],\r\n\t[\"Panama\"],\r\n\t[\"Bahrain\"],\r\n\t[\"Benin\"],\r\n\t[\"Ghana\"],\r\n\t[\"Haiti\"],\r\n\t[\"Montenegro\"],\r\n\t[\"Somalia\"],\r\n\t[\"Mali\"],\r\n\t[\"Malawi\"],\r\n\t[\"Syria\"],\r\n\t[\"Gambia\"],\r\n\t[\"Central African Republic\"],\r\n\t[\"Lesotho\"],\r\n\t[\"Western Sahara\"],\r\n\t[\"Equitorial Guinea\"],\r\n\t[\"Ivory Coast\"],\r\n\t[\"Rwanda\"],\r\n\t[\"Ecuador\"],\r\n\t[\"Honduras\"],\r\n\t[\"Madagascar\"],\r\n\t[\"Papua New Guinea\"],\r\n\t[\"Tunisia\"],\r\n\t[\"Angola\"],\r\n\t[\"Botswana\"],\r\n\t[\"Cyprus\"],\r\n\t[\"Algeria\"],\r\n\t[\"Bahamas\"],\r\n\t[\"New Caledonia\"],\r\n\t[\"Uganda\"],\r\n\t[\"Yemen\"],\r\n\t[\"Zambia\"],\r\n\t[\"Antarctica\"],\r\n\t[\"Paraguay\"],\r\n\t[\"Jamaica\"],\r\n\t[\"Palestine\"],\r\n\t[\"Bolivia\"],\r\n\t[\"Bosnia and Herzegovina\"],\r\n\t[\"Vietnam\"],\r\n\t[\"Kenya\"],\r\n\t[\"Luxembourg\"],\r\n\t[\"Niger\"],\r\n\t[\"Kuwait\"],\r\n\t[\"Hawaii\"],\r\n\t[\"Scotland\"],\r\n\t[\"Cambodia\"],\r\n\t[\"Uruguay\"],\r\n\t[\"Kyrgyzstan\"],\r\n\t[\"Saudi Arabia\"],\r\n\t[\"Indonesia\"],\r\n\t[\"Azerbaijan\"],\r\n\t[\"United Arab Emirates\"],\r\n\t[\"Mauritius\"],\r\n\t[\"Morocco\"],\r\n\t[\"Albania\"],\r\n\t[\"South Korea\"],\r\n\t[\"Kazakhstan\"],\r\n\t[\"Macedonia\"],\r\n\t[\"Venezuela\"],\r\n\t[\"Taiwan\"],\r\n\t[\"Qatar\"],\r\n\t[\"Jordan\"],\r\n\t[\"Iceland\"],\r\n\t[\"Guatemala\"],\r\n\t[\"Costa Rica\"],\r\n\t[\"Hong Kong\"],\r\n\t[\"San Marino\"],\r\n\t[\"Colombia\"],\r\n\t[\"Moldova\"],\r\n\t[\"Armenia\"],\r\n\t[\"Malta\"],\r\n\t[\"Nepal\"],\r\n\t[\"Lebanon\"],\r\n\t[\"Malaysia\"],\r\n\t[\"Serbia\"],\r\n\t[\"Peru\"],\r\n\t[\"Trinidad and Tobago\"],\r\n\t[\"Lithuania\"],\r\n\t[\"Estonia\"],\r\n\t[\"Georgia\"],\r\n\t[\"Iran\"],\r\n\t[\"Chile\"],\r\n\t[\"Chad\"],\r\n\t[\"South Sudan\"],\r\n\t[\"Latvia\"],\r\n\t[\"Thailand\"],\r\n\t[\"Egypt\"],\r\n\t[\"Slovenia\"],\r\n\t[\"Mexico\"],\r\n\t[\"Belarus\"],\r\n\t[\"Slovakia\"],\r\n\t[\"Sri Lanka\"],\r\n\t[\"Croatia\"],\r\n\t[\"Philippines\"],\r\n\t[\"Bangladesh\"],\r\n\t[\"Turkey\"],\r\n\t[\"Romania\"],\r\n\t[\"Italy\"],\r\n\t[\"South Africa\"],\r\n\t[\"Hungary\"],\r\n\t[\"Pakistan\"],\r\n\t[\"Portugal\"],\r\n\t[\"Ukraine\"],\r\n\t[\"Greece\"],\r\n\t[\"Oman\"],\r\n\t[\"Argentina\"],\r\n\t[\"Singapore\"],\r\n\t[\"Bulgaria\"],\r\n\t[\"Japan\"],\r\n\t[\"Czech Republic \"],\r\n\t[\"Ireland\"],\r\n\t[\"China\"],\r\n\t[\"Finland\"],\r\n\t[\"Brazil\"],\r\n\t[\"Norway\"],\r\n\t[\"Austria\"],\r\n\t[\"Denmark\"],\r\n\t[\"Belgium\"],\r\n\t[\"New Zealand\"],\r\n\t[\"Spain\"],\r\n\t[\"Switzerland\"],\r\n\t[\"Russia\"],\r\n\t[\"Poland\"],\r\n\t[\"Israel\"],\r\n\t[\"Sweden\"],\r\n\t[\"Netherlands\"],\r\n\t[\"France\"],\r\n\t['French Guiana'],\r\n\t[\"Australia\"],\r\n\t[\"Canada\"],\r\n\t[\"India\"],\r\n\t[\"Germany\"],\r\n\t[\"United Kingdom\"],\r\n\t[\"United States\"],\r\n\t[\"Unknown\"],\r\n\t[\"Suriname\"],\r\n\t[\"Svalbard\"],\r\n\t[\"Liberia\"],\r\n\t[\"Burkina Faso\"],\r\n\t[\"Republic of the Congo\"],\r\n\t[\"Sierra Leone\"],\r\n\t[\"Togo\"],\r\n\t[\"Eritrea\"],\r\n\t[\"North Korea\"],\r\n\t[\"Kosovo\"],\r\n\t[\"Skopje\"]\r\n]\r\nexport default countries;","import React from \"react\";\r\nimport { checkUserValidity } from \"../utility\";\r\nimport { Button, Col, Container, Form, Row, Card } from 'react-bootstrap';\r\nimport countries from '../data/countries.json'\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport moment from 'moment';\r\nimport CountryMap from \"../data/CountryMap\";\r\nimport GoogleCharts from \"../components/GoogleCharts\";\r\nimport allCountries from '../data/countriesForChart';\r\nimport home from '../img/home.jpg';\r\n\r\nclass HomePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.countries = countries;\r\n        this.state = {\r\n            input: '',\r\n            country: '',\r\n            filteredList: ''\r\n        }\r\n    }\r\n    // filter countries by input\r\n    searchTextChanged = (filter) => {\r\n        const filteredList = this.countries.filter((country) => {\r\n            return country.name.toLowerCase().includes(filter.toLowerCase())\r\n        })\r\n\r\n        this.setState({\r\n            filteredList: filteredList,\r\n            input: filter\r\n        })\r\n    }\r\n    // add to state the chosen country\r\n    chooseACountry = (country) => {\r\n        this.setState({\r\n            country: country,\r\n            filteredList: '',\r\n            input: country,\r\n            error: \"\"\r\n        })\r\n    }\r\n\r\n    addMap = () => {\r\n        const data = countries.find((curr) => curr.name === this.state.input)\r\n        if (this.props.maps.find((curr) => curr.country === this.state.input)) {\r\n            this.setState({\r\n                error: `*you alredy have map of ${this.state.input} in your maps`\r\n            })\r\n        }\r\n        else if (data) {\r\n            const map = new CountryMap(\r\n                this.state.country,\r\n                data.country_code,\r\n                data.latlng[0],\r\n                data.latlng[1],\r\n                data.capital,\r\n                moment().format(\"MMM Do YYYY\"),\r\n                this.state.subTitle,\r\n                this.state.freeText)\r\n            this.props.addMap(\"maps\", map);\r\n            window.location.href = '#/maps'\r\n\r\n        } else {\r\n            this.setState({\r\n                error: \"*please enter valid country\"\r\n            })\r\n        }\r\n    }\r\n\r\n    setParameters = (obj) => {\r\n        this.setState({\r\n            country: obj[0],\r\n            input: obj[0],\r\n            error: \"\"\r\n        })\r\n    }\r\n\r\n    updateSubTitle = (e) => {\r\n        this.setState({\r\n            subTitle: e.target.value\r\n        })\r\n    }\r\n\r\n    updateFreeText = (e) => {\r\n        this.setState({\r\n            freeText: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        checkUserValidity(this.props.user)\r\n        return (\r\n            <Container fluid className=\"screen p-maps\">\r\n                <Row cla>\r\n                    <Col className=\"list-bar\" sm=\"12\" md=\"4\" lg=\"3\">\r\n                        <Card className=\"list \">\r\n                            <Card.Header >Start to explor:</Card.Header>\r\n                            <Card.Text className=\"search\">\r\n                                <SearchBox\r\n                                    search={this.state.input}\r\n                                    placeHolder={'Choose a country'}\r\n                                    result={this.state.filteredList}\r\n                                    onSearchChanged={this.searchTextChanged}\r\n                                    onResultSelected={this.chooseACountry}>\r\n                                </SearchBox>\r\n                                <div className=\"error\">{this.state.error}</div>\r\n\r\n                                <div>\r\n                                    <h4>{this.state.country}</h4>\r\n                                    {/* <CountryData\r\n                            country={this.state.country}>\r\n                        </CountryData> */}\r\n                                </div>\r\n                                <div className=\"data\">Date of create:{moment().format(\"MMM Do YYYY\")}</div>\r\n                                <Form >\r\n                                    <Form.Group>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            placeholder=\"Add your own sub title\"\r\n                                            onChange={this.updateSubTitle}\r\n                                            value={this.state.subTitle} />\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Control\r\n                                            as=\"textarea\"\r\n                                            rows={3}\r\n                                            placeholder=\"Add Free text\"\r\n                                            onChange={this.updateFreeText}\r\n                                            value={this.state.freeText} />\r\n                                    </Form.Group>\r\n                                    <Button type=\"button\"\r\n                                        variant=\"info\"\r\n                                        onClick={this.addMap}\r\n                                    //disabled\r\n                                    >\r\n                                        Create Map\r\n                            </Button>\r\n                                </Form>\r\n                            </Card.Text>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col sm=\"12\" md=\"8\" lg=\"9\" className=\"map-container\">\r\n                        <GoogleCharts\r\n                            setParameters={this.setParameters}\r\n                            data={allCountries}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Container >\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomePage;","export default __webpack_public_path__ + \"static/media/home.aee0b3c9.jpg\";","export default __webpack_public_path__ + \"static/media/logo.5636fbfa.svg\";","import React from \"react\";\r\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../img/logo.svg';\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            pwd: ''\r\n        }\r\n    }\r\n\r\n    updatePassword = (e) => {\r\n        this.setState(\r\n            {\r\n                pwd: e.target.value\r\n            }\r\n        )\r\n    }\r\n\r\n    updateEmail = (e) => {\r\n        this.setState(\r\n            {\r\n                email: e.target.value\r\n            }\r\n        )\r\n    }\r\n\r\n    validateLogin = () => {\r\n        const validUser = this.props.userslist.find((user) => {\r\n            return (user.email === this.state.email && user.pwd === this.state.pwd)\r\n        });\r\n\r\n        if (validUser) {\r\n            this.props.login(validUser)\r\n            window.location.href = \"#/home\"\r\n        } else {\r\n            alert(\"user or password incorect\")\r\n        }\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <Container fluid className=\"p-login\" >\r\n                <Row className=\"login-container\">\r\n                    <Col className=\"my-auto\" lg={{ span: 4, offset: 4 }} sm=\"12\">\r\n                        <Form className=\"sign-form\">\r\n                            <div className=\"head\">\r\n                                <div className=\"logo\"><img src={logo} alt=\"Logo\" /></div>\r\n                                <div className=\"sub-title\">Your journey start here</div>\r\n\r\n                            </div>\r\n\r\n                            <Form.Group>\r\n                                <Form.Label>Email address</Form.Label>\r\n                                <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={this.updateEmail} value={this.state.email} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group  >\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type=\"password\" placeholder=\"Password\" onChange={this.updatePassword} value={this.state.pwd} />\r\n                            </Form.Group>\r\n                            <Form.Group >\r\n                                Dont have acount yet? Sign\r\n                                <Link to=\"/\"> here</Link>\r\n                            </Form.Group>\r\n\r\n                            <Button variant=\"info\" type=\"button\" sm={{ offset: 8 }} onClick={this.validateLogin}>\r\n                                Submit\r\n                            </Button >\r\n                        </Form>\r\n                    </Col>\r\n\r\n\r\n                </Row>\r\n            </Container>\r\n\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { Button, Col, Container, Form, Row } from 'react-bootstrap';\r\nimport logo from '../img/logo.svg';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Signup extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            name: '',\r\n            pwd: ''\r\n        }\r\n    }\r\n\r\n    createNewUser = () => {\r\n        const newUser = {\r\n            email: this.state.email,\r\n            name: this.state.name,\r\n            pwd: this.state.pwd\r\n        }\r\n        this.props.addUser(newUser)\r\n        window.location.href = \"/#/home\";\r\n    }\r\n\r\n    \r\n    render() {\r\n\r\n        return (\r\n\r\n            <Container fluid  >\r\n                <Row className=\"sign-container\">\r\n                    <Col lg={{ span: 4, offset: 7 }} md={{ span: 5, offset: 6 }} sm=\"12\" className=\"my-auto\">\r\n                        <Form className=\"sign-form p-sign\">\r\n                            <div className=\"head\">\r\n                                <div className=\"logo\"><img src={logo} alt=\"Logo\" /></div>\r\n                                <div className=\"sub-title\">Your journey start here</div>\r\n\r\n                            </div>\r\n                            <div className=\"start\">Start to create your own trips by signup </div>\r\n                            <Form.Group>\r\n\r\n                                <Form.Label name=\"name\">Name<div className=\"error\"></div></Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Add Name\"\r\n                                    onChange={(e) => this.setState({ name: e.target.value })} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group >\r\n                                <Form.Label name=\"email\">Email address<div className=\"error\"></div></Form.Label>\r\n                                <Form.Control type=\"email\" placeholder=\"Enter email\"\r\n                                    onChange={(e) => this.setState({ email: e.target.value })} />\r\n                                <Form.Text className=\"text-muted\">\r\n\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group >\r\n                                <Form.Label name=\"password\">Password<div className=\"error\"></div></Form.Label>\r\n                                <Form.Control type=\"password\" placeholder=\"Password\"\r\n                                    onChange={(e) => this.setState({ pwd: e.target.value })} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group >\r\n                                <Form.Label name=\"password-confirm\">Password confirm<div className=\"error\"></div></Form.Label>\r\n                                <Form.Control type=\"password\" placeholder=\"Password\"\r\n                                    onChange={(e) => this.setState({ pwd: e.target.value })} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                <div>Alredy have acount? click <Link to=\"/login\">Here</Link> </div>\r\n\r\n                            </Form.Group>\r\n\r\n                            <Col>\r\n                                <Button variant=\"info\" type=\"button\" onClick={this.createNewUser}>\r\n                                    Signup\r\n                                 </Button>\r\n                            </Col>\r\n\r\n\r\n                        </Form>\r\n                    </Col>\r\n\r\n                </Row>\r\n            </Container>\r\n\r\n\r\n\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Signup;","import React from \"react\";\r\nimport { Card, Col,Row, Container, ListGroup } from \"react-bootstrap\";\r\nimport GoogleCharts from \"../components/GoogleCharts\";\r\nimport { checkUserValidity } from \"../utility\";\r\n\r\nclass Maps extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    goTo = (id) => {\r\n        window.location.href = `#/list/${id}`\r\n    }\r\n\r\n    createlist = () => {\r\n        return this.props.list.map((map) => {\r\n            return (<ListGroup.Item onClick={() => { this.goTo(map.code) }}>\r\n                <Card.Title>\r\n                    {map.country}\r\n                    <span>            </span>\r\n                    <span className=\"date\">\r\n                        {map.date}\r\n                    </span>\r\n                </Card.Title>\r\n                <Card.Subtitle>\r\n                    <span className=\"mb-2 text-muted\">{map.subTitle} </span>\r\n                </Card.Subtitle>\r\n                <Card.Text>\r\n                    {map.freeText}\r\n                </Card.Text>\r\n            </ListGroup.Item>)\r\n        })\r\n    }\r\n\r\n    makeListOfChosenCountries = (list) => {\r\n        return (list.map((curr) => [curr.country]))\r\n    }\r\n\r\n    setParameters = () => { }\r\n    render() {\r\n        checkUserValidity(this.props.user)\r\n        const list = this.createlist()\r\n        const ChosenCountries = this.makeListOfChosenCountries(this.props.list)\r\n\r\n        return (\r\n            <Container fluid className=\"p-maps\">\r\n                <Row>\r\n                    <Col className=\"list-bar\" sm=\"12\" md=\"3\" lg=\"2\">\r\n                        <Card className=\"list\">\r\n                            <Card.Header className=\"title\">My World Maps</Card.Header>\r\n                            <ListGroup variant=\"flush\">\r\n                                {list}\r\n                            </ListGroup>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col sm=\"12\" md=\"9\" lg=\"10\" className=\"map-container\">\r\n                            <GoogleCharts className=\"my-auto\"\r\n                                setParameters={this.setParameters}\r\n                                data={ChosenCountries}\r\n                            />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Maps;","import React from \"react\";\r\n\r\nclass Marker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"marker\">\r\n                <div className=\"marker-info\">{this.props.text}</div>\r\n                <div className={`marker-place ${this.props.category}`}></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Marker","import React from \"react\";\r\nimport GoogleMapReact from 'google-map-react';\r\nimport Marker from \"./Marker\";\r\nlet google = window.google;\r\n\r\n\r\nclass GMap extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n    onMapClick = (e) => {\r\n        // const geocoder = new google.maps.Geocoder();\r\n        // geocoder.geocode({ location: e }, (results, status) => {\r\n        //     if (status === \"OK\") {\r\n        //         if (results[0]) {\r\n        //             // map.setZoom(11);\r\n        //             // const marker = new google.maps.Marker({\r\n        //             //   position: latlng,\r\n        //             //   map: map,\r\n        //             // });\r\n        //             const res = results.find((country) => {\r\n        //                 return country.types.includes(\"country\")\r\n        //             })\r\n\r\n\r\n        //         } else {\r\n        //             window.alert(\"No results found\");\r\n        //         }\r\n        //     } else {\r\n        //         window.alert(\"Geocoder failed due to: \" + status);\r\n        //     }\r\n\r\n        //     this.props.setParameters(this.state.pin)\r\n        //     });\r\n    }\r\n\r\n    createMarkers = (places) => {\r\n        if (places) {\r\n            return places.map((place) => {\r\n                return (<Marker\r\n                    lat={place.lat}\r\n                    lng={place.lng}\r\n                    text={place.title}\r\n                    address={place.addres}\r\n                    category={place.category}\r\n                >\r\n                </Marker>)\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const markers = this.createMarkers(this.props.places)\r\n        return (\r\n            <div className=\"g-map\">\r\n                <GoogleMapReact\r\n                    bootstrapURLKeys={{ key: 'AIzaSyAehE6kMUhBdd8FMJ5A-3OVG1q6S3c5h-8' }}\r\n                    height={'100%'} width={'100%'}\r\n                    defaultCenter={this.props.center}\r\n                    defaultZoom={7}\r\n                    onClick={this.onMapClick}\r\n                >\r\n                    {markers}\r\n                </GoogleMapReact>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GMap;\r\n","import React from \"react\";\r\nimport ReactGoogleAutocomplete from \"react-google-autocomplete\";\r\nimport Geocode from \"react-geocode\";\r\n\r\nclass Autocomplete extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"pac-container\">\r\n                <ReactGoogleAutocomplete \r\n                    apiKey={'AIzaSyAehE6kMUhBdd8FMJ5A-3OVG1q6S3c5h-8'}\r\n                    onPlaceSelected={(place) => {\r\n                        Geocode.setApiKey('AIzaSyAehE6kMUhBdd8FMJ5A-3OVG1q6S3c5h-8');\r\n                        Geocode.fromAddress(place.formatted_address).then(\r\n                            (response) => {\r\n                                const { lat, lng } = (response ? response.results[0].geometry.location : \"invalid\");\r\n                                this.setState({\r\n                                    adress: place.formatted_address,\r\n                                    marker: { lat, lng }\r\n                                })\r\n                                this.props.updateAdress(place.formatted_address, { lat, lng })\r\n                            }\r\n                        );\r\n\r\n                    }}\r\n                    options={{\r\n                        types: [[\"establishment\"], [\"address\"], [\"(region)\"]],\r\n                        componentRestrictions: { country: this.props.id }\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Autocomplete;","import { v4 as uuidv4 } from 'uuid'\r\n\r\nclass Pin {\r\n    constructor(code, category, title, rate, address, freeText,lat,lng) {\r\n        this.code = code;\r\n        this.category = category;\r\n        this.title = title;\r\n        this.rate = rate;\r\n        this.address = address;\r\n        this.freeText = freeText;\r\n        this.lat=lat;\r\n        this.lng = lng;\r\n        this.id = uuidv4();\r\n    }\r\n}\r\n\r\nexport default Pin;\r\n","import React from \"react\";\r\nimport { Button, Col, Container, Form } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router\";\r\nimport GMap from \"../components/GMap\";\r\nimport { getLatlngById } from \"../utility\";\r\nimport Autocomplete from \"../components/Autocomplete\";\r\nimport Pin from \"../data/Pin\";\r\nclass EditMapList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.id = this.props.match.params.id;\r\n        this.latlng = getLatlngById(this.id);\r\n        this.state = {\r\n            importance: \"1\"\r\n        }\r\n    }\r\n\r\n    addToMap = () => {\r\n        const place = new Pin(\r\n            this.id,\r\n            this.state.category,\r\n            this.state.title,\r\n            this.state.importance,\r\n            this.state.address,\r\n            this.state.freeText,\r\n            this.state.marker.lat,\r\n            this.state.marker.lng,\r\n            this.state.marker)\r\n        this.props.addPlace(\"places\", place)\r\n\r\n        window.location.href = `#/list/${this.id}`\r\n    }\r\n\r\n    changeImportance = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    updateAdress = (address, marker) => {\r\n        this.setState({\r\n\r\n            address: address,\r\n            marker: marker\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <Container fluid className=\"edit\">\r\n\r\n                <div className=\"p-edit-list\">\r\n                    <Col>\r\n                        <Autocomplete\r\n                            updateAdress={this.updateAdress}\r\n                            id={this.id} />\r\n                        <Form >\r\n\r\n                            <Form.Group>\r\n                                <Form.Control type=\"text\"\r\n                                    name=\"title\"\r\n                                    placeholder=\"My title\"\r\n                                    value={this.state.title}\r\n                                    onChange={this.changeImportance} />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n                                <Form.Control as=\"select\"\r\n                                    name=\"category\"\r\n                                    onChange={this.changeImportance}\r\n                                    value={this.state.category} custom>\r\n                                    <option value=\"selectCategory\">Select Category</option>\r\n                                    <option value=\"hotels\">hotels</option>\r\n                                    <option value=\"market-place\">Market Place</option>\r\n                                    <option value=\"restaurnts\">Restaurnts</option>\r\n                                    <option value=\"sites\">Sites</option>\r\n                                    <option value=\"shopping\">Shopping</option>\r\n                                    <option value=\"transportation\">Transportation</option>\r\n                                    <option value=\"\">**** Add your on category***</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <div className=\"importance\">\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"radio\" name=\"importance\" id=\"mostimportant\" value=\"1\" onClick={this.changeImportance} checked={this.state.importance == \"1\"} />\r\n                                    <label class=\"form-check-label\" htmlFor=\"mostimportant\">\r\n                                        Mast visit\r\n                                </label>\r\n                                </div>\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"radio\" name=\"importance\" id=\"midimportant\" value=\"2\" onClick={this.changeImportance} checked={this.state.importance == \"2\"} />\r\n                                    <label class=\"form-check-label\" htmlFor=\"midimportant\">\r\n                                        Happy To visit\r\n                                </label>\r\n                                </div>\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"radio\" name=\"importance\" id=\"leastimportant\" value=\"3\" onClick={this.changeImportance} checked={this.state.importance == \"3\"} />\r\n                                    <label class=\"form-check-label\" htmlFor=\"leastimportant\">\r\n                                        Visit on time left\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                <Form.Control as=\"textarea\"\r\n                                    rows={3}\r\n                                    placeholder=\"Add Free text\"\r\n                                    onChange={this.changeImportance}\r\n                                    name=\"freeText\" />\r\n                            </Form.Group>\r\n                            <Button type=\"button\"\r\n                                variant=\"info\"\r\n                                onClick={this.addToMap}>\r\n                                Add to my list\r\n                        </Button>\r\n                        </Form>\r\n                    </Col>\r\n                </div>\r\n                <div className=\"g-map\">\r\n                    <GMap\r\n                        center={this.latlng}\r\n                    ></GMap>\r\n                </div>\r\n            </Container>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(EditMapList);","import React from \"react\";\r\nimport { Button, Card, Col, Container, Row, Modal,Form ,ListGroup} from \"react-bootstrap\";\r\nimport Autocomplete from \"../components/Autocomplete\";\r\nimport Pin from \"../data/Pin\";\r\nimport GMap from \"../components/GMap\";\r\nimport { checkUserValidity, getLatlngById } from \"../utility\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass Lists extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.url = window.location.href;\r\n        this.id = this.props.match.params.id;\r\n        this.latlng = getLatlngById(this.id);\r\n        this.state = {\r\n            isModalOpen: false,\r\n            isMiniModalOpen: false,\r\n        }\r\n    }\r\n\r\n    goTo = () => {\r\n        window.location.href = `#/edit-list/${this.id}`\r\n\r\n    }\r\n\r\n    createlist = () => {\r\n        console.log(\"list\",this.props.list)\r\n        return this.props.list.map((place) => {\r\n            if (place.code === this.id) {\r\n                \r\n                return (<ListGroup.Item id=\"place.id\" onClick={()=>{this.showItem(place)}}>\r\n                <Card.Title>\r\n                    {place.title}\r\n                </Card.Title>\r\n                <Card.Subtitle>\r\n                    <span className=\"mb-2 text-muted\">{place.category} </span>\r\n                </Card.Subtitle>\r\n                <Card.Text>\r\n                    {place.freeText}\r\n                </Card.Text>\r\n            </ListGroup.Item>)\r\n            }\r\n            return\r\n        })\r\n    }\r\n\r\n    handleClose = (modalKind) => {\r\n        this.setState({\r\n           [modalKind]: false,\r\n        })\r\n    }\r\n\r\n    addToMap = () => {\r\n        const place = new Pin(\r\n            this.id,\r\n            this.state.category,\r\n            this.state.title,\r\n            this.state.importance,\r\n            this.state.address,\r\n            this.state.freeText,\r\n            this.state.marker.lat,\r\n            this.state.marker.lng,\r\n            )\r\n        this.props.addPlace(\"places\", place)\r\n\r\n        this.setState({ isModalOpen: false })\r\n    }\r\n\r\n    changeImportance = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    updateAdress = (address, marker) => {\r\n        this.setState({\r\n            address: address,\r\n            marker: marker\r\n        })\r\n    }\r\n\r\n    showItem=(place)=>{\r\n        if(place){\r\n            console.log(\"show items\",place.title)\r\n            this.setState({\r\n                isMiniModalOpen: true,\r\n                place:place\r\n            })\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    chooseRate=(rate)=>{\r\n        if(rate ==1){\r\n            return \"Mast visit\"\r\n        }\r\n        if(rate == 2){\r\n            return \" Happy To visit \"\r\n        }\r\n        return \"Visit on time left\"\r\n    }\r\n\r\n    checkValidity=()=>{\r\n        if(this.state.place){\r\n            console.log(this.state.place)\r\n        return(\r\n            <Modal show={this.state.isMiniModalOpen} onHide={()=>this.handleClose(\"isMiniModalOpen\")}>\r\n            <Modal.Header closeButton>\r\n            <Modal.Title>{this.state.place.title}</Modal.Title>\r\n            </Modal.Header>\r\n        \r\n            <Modal.Body>\r\n                <p><b>Category: </b>{this.state.place.category}</p>\r\n                <p><b>Rate: </b>{this.chooseRate(this.state.place.rate)}</p>\r\n                <p><b>Address: </b>{this.state.place.address}</p>\r\n                <p>{this.state.place.freeText}</p>\r\n            </Modal.Body>\r\n        </Modal>\r\n        )\r\n            \r\n        }\r\n    }\r\n    render() {\r\n        checkUserValidity(this.props.user)\r\n        const list = this.createlist();\r\n        const modalItem = this.checkValidity();\r\n        return (\r\n        \r\n            <Container fluid className=\"p-maps screen\">\r\n                    {this.showItem()}\r\n                <Row >\r\n                    <Col className=\"list-bar\" sm=\"12\" md=\"3\" lg=\"3\">\r\n                        <Card className=\"list \">\r\n                        <div className=\"p-lists\">\r\n                        <Card.Header>\r\n                            <Button type=\"button\"\r\n                                variant=\"info\"\r\n                                onClick={() => { this.setState({ isModalOpen: true }) }}\r\n                                        >\r\n                                Add new Place\r\n                            </Button>   \r\n                        </Card.Header>\r\n                        <ListGroup variant=\"flush\">\r\n                                {list}\r\n                            </ListGroup>\r\n                            </div>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col sm=\"12\" md=\"9\" lg=\"9\" className=\"gmap-container\">           \r\n                            <GMap className=\"map-container my-auto\"\r\n                                center={this.latlng}\r\n                                places={this.props.list}\r\n                            ></GMap>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Modal show={this.state.isModalOpen} onHide={()=>this.handleClose(\"isModalOpen\")}>\r\n                    <Form >\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Search for a place\r\n                         \r\n                            </Modal.Title>\r\n                        </Modal.Header>\r\n\r\n                        <Modal.Body >\r\n                        <Autocomplete \r\n                                    updateAdress={this.updateAdress}\r\n                                    id={this.id} />\r\n                                    \r\n                        <Form.Group className=\"add-to-list\">\r\n                            <Form.Control type=\"text\"\r\n                                name=\"title\"\r\n                                placeholder=\"My title\"\r\n                                value={this.state.title}\r\n                                onChange={this.changeImportance} />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n                                <Form.Control as=\"select\"\r\n                                    name=\"category\"\r\n                                    onChange={this.changeImportance}\r\n                                    value={this.state.category} custom>\r\n                                    <option value=\"selectCategory\">Select Category</option>\r\n                                    <option value=\"hotels\">hotels</option>\r\n                                    <option value=\"market-place\">Market Place</option>\r\n                                    <option value=\"restaurnts\">Restaurnts</option>\r\n                                    <option value=\"sites\">Sites</option>\r\n                                    <option value=\"shopping\">Shopping</option>\r\n                                    <option value=\"transportation\">Transportation</option>\r\n                                    <option value=\"\">**** Add your on category***</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <div className=\"importance\">\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"radio\" name=\"importance\" id=\"mostimportant\" value=\"1\" onClick={this.changeImportance} checked={this.state.importance == \"1\"} />\r\n                                    <label class=\"form-check-label\" htmlFor=\"mostimportant\">\r\n                                        Mast visit\r\n                                </label>\r\n                                </div>\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"radio\" name=\"importance\" id=\"midimportant\" value=\"2\" onClick={this.changeImportance} checked={this.state.importance == \"2\"} />\r\n                                    <label class=\"form-check-label\" htmlFor=\"midimportant\">\r\n                                        Happy To visit\r\n                                </label>\r\n                                </div>\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"radio\" name=\"importance\" id=\"leastimportant\" value=\"3\" onClick={this.changeImportance} checked={this.state.importance == \"3\"} />\r\n                                    <label class=\"form-check-label\" htmlFor=\"leastimportant\">\r\n                                        Visit on time left\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                <Form.Control as=\"textarea\"\r\n                                    rows={3}\r\n                                    placeholder=\"Add Free text\"\r\n                                    onChange={this.changeImportance}\r\n                                    name=\"freeText\" />\r\n                            </Form.Group>\r\n                        </Modal.Body>\r\n\r\n                        <Modal.Footer>\r\n                            <Button type=\"button\"\r\n                                variant=\"info\"\r\n                                onClick={this.addToMap}>\r\n                                Add to my list\r\n                        </Button>\r\n                        </Modal.Footer>\r\n                    </Form>\r\n                </Modal>\r\n                {modalItem}\r\n            </Container>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Lists);","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { HashRouter, Route } from 'react-router-dom';\nimport AppNavbar from './components/AppNavbar';\nimport HomePage from './pages/HomePage';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Maps from './pages/Maps';\nimport EditMapList from './pages/EditMapList';\nimport user from './data/users.json'\nimport maps from './data/maps.json'\nimport places from './data/places.json'\nimport Lists from './pages/Lists';\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {\n        name: \"Sarai\",\n        email: \"sr.roiz@gmail.com\",\n        pwd: \"pwd\",\n        currentMap: \"\"\n      },\n      userslist: user,\n      maps: maps,\n      places: places,\n    }\n  }\n  // log out from app\n  logout = () => {\n    this.setState({\n      user: null\n    })\n\n  }\n  // update the user on the app\n  login = (userObj) => {\n    this.setState({\n      user: userObj\n    })\n  }\n  // add new user for list of users\n  addUser = (user) => {\n    this.setState({\n      user: user,\n      userslist: this.state.userslist.concat(user)\n    })\n  }\n\n  // add new map to map list\n  addData = (key, value) => {\n    this.setState({\n      [key]: this.state[key].concat(value)\n\n    })\n\n  }\n\n\n  render() {\n    return (\n      <HashRouter>\n        <Route exact path={['/home', '/maps', '/list/:id', '/edit-list/:id']}>\n          <AppNavbar exact\n            user={this.state.user}\n            logout={this.logout} />\n        </Route>\n\n        <Route exact path={'/home'}>\n          <HomePage\n            user={this.state.user}\n            addMap={this.addData}\n            maps={this.state.maps}\n          ></HomePage>\n        </Route>\n\n        <Route exact path={'/login'}>\n          <Login\n            userslist={this.state.userslist}\n            login={this.login}></Login>\n        </Route>\n\n        <Route exact path={'/'}>\n          <Signup addUser={this.addUser}\n            user={this.state.user}>\n          </Signup>\n        </Route>\n\n        <Route exact path={'/maps'}>\n          <Maps\n            user={this.state.user}\n            list={this.state.maps}>\n          </Maps>\n        </Route>\n\n        <Route exact path={'/list/:id'}>\n          <Lists\n            user={this.state.user}\n            list={this.state.places}\n            addPlace={this.addData}>\n          </Lists>\n        </Route>\n\n      </HashRouter>\n\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}