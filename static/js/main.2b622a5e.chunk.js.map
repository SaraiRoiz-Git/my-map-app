{"version":3,"sources":["img/logoNav.svg","components/AppNavbar.js","utility.js","components/SearchBox.js","data/CountryMap.js","components/GoogleCharts.js","data/countriesForChart.js","pages/HomePage.js","img/logo.svg","pages/Login.js","pages/Signup.js","pages/Maps.js","components/Marker.js","components/GMap.js","data/Pin.js","components/Autocomplete.js","components/AddPin.js","pages/Lists.js","App.js","index.js"],"names":["AppNavbar","props","state","logout","this","user","Nav","Link","href","onClick","userName","name","Navbar","collapseOnSelect","expand","bg","variant","sticky","Brand","className","src","logoNav","alt","Toggle","aria-controls","Collapse","id","React","Component","checkUserValidity","window","location","SearchBox","result","countries","map","country","ListGroup","Item","action","onResultSelected","Form","Group","Control","type","value","search","placeholder","placeHolder","onChange","e","onSearchChanged","target","CountryMap","lat","lng","capital","date","subTitle","free","email","code","uuidv4","GoogleCharts","onMapClick","selectedId","chartWrapper","getChart","getSelection","length","data","row","setParameters","console","log","zoom","chartType","mapsApiKey","width","regionClick","options","backgroundColor","defaultColor","chartEvents","eventName","callback","HomePage","searchTextChanged","filter","filteredList","toLowerCase","includes","setState","input","chooseACountry","error","addMap","find","curr","list","country_code","latlng","moment","format","freeText","obj","updateData","Container","fluid","Row","cla","Col","sm","md","lg","Card","Header","Text","as","rows","Button","allCountries","Login","updatePassword","pwd","updateEmail","validateLogin","validUser","userslist","login","span","offset","logo","Label","to","Signup","validateName","nameError","validateEmail","test","users","localeCompare","emailError","validatePassword","pwdError","pwdConfirm","pwd2Error","createNewUser","nameValid","emailValid","passwordValid","addUser","controlId","Maps","goTo","createlist","Title","Subtitle","makeListOfChosenCountries","ChosenCountries","concat","Marker","text","category","GMap","createMarkers","places","place","title","address","addres","markers","bootstrapURLKeys","key","height","defaultCenter","center","defaultZoom","Pin","rate","Autocomplete","apiKey","onPlaceSelected","Geocode","setApiKey","fromAddress","formatted_address","then","response","results","geometry","adress","marker","updateAdress","types","componentRestrictions","AddPin","changeImportance","addToMap","importance","addPlace","handleClose","errorCategory","Modal","show","isModalOpen","onHide","closeButton","Body","custom","class","checked","htmlFor","Footer","Lists","showItem","modalKind","isMiniModalOpen","chooseRate","checkValidity","url","match","params","modalItem","withRouter","App","maps","pins","pin","localUsersString","JSON","stringify","localStorage","localUsers","localMapsString","localMaps","localPlacesString","localPlaces","usersData","parse","mapsData","placesData","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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AC,eACD,CAAC,SACD,CAAC,WACD,CAAC,aACD,CAAC,cACD,CAAC,cACD,CAAC,sBACD,CAAC,UACD,CAAC,YACD,CAAC,MACD,CAAC,aACD,CAAC,QACD,CAAC,SACD,CAAC,UACD,CAAC,WACD,CAAC,SACD,CAAC,SACD,CAAC,SACD,CAAC,cACD,CAAC,WACD,CAAC,QACD,CAAC,UACD,CAAC,SACD,CAAC,UACD,CAAC,4BACD,CAAC,WACD,CAAC,kBACD,CAAC,qBACD,CAAC,eACD,CAAC,UACD,CAAC,WACD,CAAC,YACD,CAAC,cACD,CAAC,oBACD,CAAC,WACD,CAAC,UACD,CAAC,YACD,CAAC,UACD,CAAC,WACD,CAAC,WACD,CAAC,iBACD,CAAC,UACD,CAAC,SACD,CAAC,UACD,CAAC,cACD,CAAC,YACD,CAAC,WACD,CAAC,aACD,CAAC,WACD,CAAC,0BACD,CAAC,WACD,CAAC,SACD,CAAC,cACD,CAAC,SACD,CAAC,UACD,CAAC,UACD,CAAC,YACD,CAAC,YACD,CAAC,WACD,CAAC,cACD,CAAC,gBACD,CAAC,aACD,CAAC,cACD,CAAC,wBACD,CAAC,aACD,CAAC,WACD,CAAC,WACD,CAAC,eACD,CAAC,cACD,CAAC,aACD,CAAC,aACD,CAAC,UACD,CAAC,SACD,CAAC,UACD,CAAC,WACD,CAAC,aACD,CAAC,cACD,CAAC,aACD,CAAC,cACD,CAAC,YACD,CAAC,WACD,CAAC,WACD,CAAC,SACD,CAAC,SACD,CAAC,WACD,CAAC,YACD,CAAC,UACD,CAAC,QACD,CAAC,uBACD,CAAC,aACD,CAAC,WACD,CAAC,WACD,CAAC,QACD,CAAC,SACD,CAAC,QACD,CAAC,eACD,CAAC,UACD,CAAC,YACD,CAAC,SACD,CAAC,YACD,CAAC,UACD,CAAC,WACD,CAAC,YACD,CAAC,aACD,CAAC,WACD,CAAC,eACD,CAAC,cACD,CAAC,UACD,CAAC,WACD,CAAC,SACD,CAAC,gBACD,CAAC,WACD,CAAC,YACD,CAAC,YACD,CAAC,WACD,CAAC,UACD,CAAC,QACD,CAAC,aACD,CAAC,aACD,C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","file":"static/js/main.2b622a5e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logoNav.efbdf2f5.svg\";","import React from 'react'\r\nimport { Nav, Navbar } from \"react-bootstrap\";\r\nimport logoNav from '../img/logoNav.svg';\r\n\r\nclass AppNavbar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n\r\n    }\r\n    render() {\r\n        const logout = this.props.user ? <Nav.Link href=\"#/home\"\r\n            onClick={() => this.props.logout()}>Sign out</Nav.Link> : null;\r\n        const userName = (this.props.user) ? <Nav.Link href=\"#/login\" >Hello {this.props.user.name}</Nav.Link> : null;\r\n\r\n        return (\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" sticky=\"top\">\r\n                <Navbar.Brand className=\"logo-nav\"><img src={logoNav} alt=\"Logo\" /></Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"#/home\">Home</Nav.Link>\r\n                        {/* <Nav.Link href=\"/\r\n                        #/create-map\">CreateMap</Nav.Link> */}\r\n                        <Nav.Link href=\"#/maps\">Maps list</Nav.Link>\r\n                    </Nav>\r\n                    <Nav>\r\n                        {logout}\r\n                        {userName}\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default AppNavbar;","import countries from './data/countries.json'\r\n\r\nexport const checkUserValidity = (user) => {\r\n    if (!user) {\r\n        window.location.href = '#/login'\r\n    }\r\n}\r\n\r\nexport const getLatlngById = (id) => {\r\n    return countries.find(country => country.country_code === id).latlng;\r\n}\r\n","import React from \"react\";\r\nimport { Form, ListGroup } from \"react-bootstrap\";\r\n\r\nclass SearchBox extends React.Component {\r\n\r\n    render() {\r\n        const result = this.props.result\r\n        let countries = ''\r\n        if (result) {\r\n            countries = result.map((country) => {\r\n                return (\r\n                    <ListGroup.Item\r\n                        action key={country.name}\r\n                        onClick={() => { this.props.onResultSelected(country.name) }}\r\n                    >{country.name}</ListGroup.Item>\r\n                )\r\n            })\r\n        }\r\n\r\n        return (\r\n\r\n            <Form.Group>\r\n                <Form.Control\r\n                    type=\"text\"\r\n                    value={this.props.search}\r\n                    placeholder={this.props.placeHolder}\r\n                    onChange={(e) => { this.props.onSearchChanged(e.target.value) }} />\r\n                <ListGroup className=\"search-items\">\r\n                    {countries}\r\n                </ListGroup>\r\n            </Form.Group>\r\n        )\r\n    }\r\n}\r\nexport default SearchBox","import { v4 as uuidv4 } from 'uuid'\r\n\r\nclass CountryMap {\r\n    constructor(country, id, lat, lng, capital, date, subTitle, free, email) {\r\n        this.country = country;\r\n        this.code = id;\r\n        this.lat = lat;\r\n        this.lng = lng;\r\n        this.capital = capital\r\n        this.date = date;\r\n        this.subTitle = subTitle;\r\n        this.free = free;\r\n        this.email = email\r\n        this.id = uuidv4();\r\n    }\r\n}\r\n\r\nexport default CountryMap","import React from \"react\";\r\nimport Chart from \"react-google-charts\";\r\n\r\nclass GoogleCharts extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      zoom: 1\r\n    }\r\n  }\r\n\r\n  onMapClick = (e) => {\r\n    let selectedId;\r\n    try {\r\n      selectedId = e.chartWrapper.getChart().getSelection();\r\n    }\r\n    catch (e) {\r\n      return;\r\n    }\r\n    if (selectedId.length) {\r\n      if (this.props.data[selectedId[0].row + 1]) {\r\n        this.props.setParameters(this.props.data[selectedId[0].row + 1])\r\n      }\r\n    } else {\r\n      console.log(\"No Country to show \");\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"g-map\">\r\n        <Chart className=\"mb-2\"\r\n          chartType=\"GeoChart\"\r\n          mapsApiKey=\"AIzaSyAehE6kMUhBdd8FMJ5A-3OVG1q6S3c5h-8\"\r\n          width={'100%'}\r\n          regionClick={this.onMapClick}\r\n          options={{\r\n            backgroundColor: '127597',\r\n            defaultColor: \"bee9e8\",\r\n          }}\r\n\r\n          data={this.props.data}\r\n\r\n          chartEvents={[\r\n            { eventName: 'select', callback: this.onMapClick }\r\n          ]}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleCharts;","const countries = [\r\n\t['Country'],\r\n\t[\"Bhutan\"],\r\n\t[\"Democratic Republic of the Congo\"],\r\n\t[\"Liechtenstein\"],\r\n\t[\"Maldives\"],\r\n\t[\"Sudan\"],\r\n\t[\"Zimbabwe\"],\r\n\t[\"Mauritania\"],\r\n\t[\"Mozambique\"],\r\n\t[\"Nigeria\"],\r\n\t[\"Swaziland\"],\r\n\t[\"Tanzania\"],\r\n\t[\"Iraq\"],\r\n\t[\"Guyana\"],\r\n\t[\"Namibia\"],\r\n\t[\"Senegal\"],\r\n\t[\"Turkmenistan\"],\r\n\t[\"Afghanistan\"],\r\n\t[\"Andorra\"],\r\n\t[\"Fiji\"],\r\n\t[\"Gabon\"],\r\n\t[\"Uzbekistan\"],\r\n\t[\"Cameroon\"],\r\n\t[\"Cuba\"],\r\n\t[\"Faroe Islands\"],\r\n\t[\"El Salvador\"],\r\n\t[\"Caribbean\"],\r\n\t[\"Ethiopia\"],\r\n\t[\"Mongolia\"],\r\n\t[\"Puerto Rico\"],\r\n\t[\"Samoa\"],\r\n\t[\"Myanmar\"],\r\n\t[\"Nicaragua\"],\r\n\t[\"Seychelles\"],\r\n\t[\"Tajikistan\"],\r\n\t[\"Dominican Republic\"],\r\n\t[\"Guinea\"],\r\n\t[\"Barbados\"],\r\n\t[\"CI\"],\r\n\t[\"Greenland\"],\r\n\t[\"Laos\"],\r\n\t[\"Libya\"],\r\n\t[\"Panama\"],\r\n\t[\"Bahrain\"],\r\n\t[\"Benin\"],\r\n\t[\"Ghana\"],\r\n\t[\"Haiti\"],\r\n\t[\"Montenegro\"],\r\n\t[\"Somalia\"],\r\n\t[\"Mali\"],\r\n\t[\"Malawi\"],\r\n\t[\"Syria\"],\r\n\t[\"Gambia\"],\r\n\t[\"Central African Republic\"],\r\n\t[\"Lesotho\"],\r\n\t[\"Western Sahara\"],\r\n\t[\"Equitorial Guinea\"],\r\n\t[\"Ivory Coast\"],\r\n\t[\"Rwanda\"],\r\n\t[\"Ecuador\"],\r\n\t[\"Honduras\"],\r\n\t[\"Madagascar\"],\r\n\t[\"Papua New Guinea\"],\r\n\t[\"Tunisia\"],\r\n\t[\"Angola\"],\r\n\t[\"Botswana\"],\r\n\t[\"Cyprus\"],\r\n\t[\"Algeria\"],\r\n\t[\"Bahamas\"],\r\n\t[\"New Caledonia\"],\r\n\t[\"Uganda\"],\r\n\t[\"Yemen\"],\r\n\t[\"Zambia\"],\r\n\t[\"Antarctica\"],\r\n\t[\"Paraguay\"],\r\n\t[\"Jamaica\"],\r\n\t[\"Palestine\"],\r\n\t[\"Bolivia\"],\r\n\t[\"Bosnia and Herzegovina\"],\r\n\t[\"Vietnam\"],\r\n\t[\"Kenya\"],\r\n\t[\"Luxembourg\"],\r\n\t[\"Niger\"],\r\n\t[\"Kuwait\"],\r\n\t[\"Hawaii\"],\r\n\t[\"Scotland\"],\r\n\t[\"Cambodia\"],\r\n\t[\"Uruguay\"],\r\n\t[\"Kyrgyzstan\"],\r\n\t[\"Saudi Arabia\"],\r\n\t[\"Indonesia\"],\r\n\t[\"Azerbaijan\"],\r\n\t[\"United Arab Emirates\"],\r\n\t[\"Mauritius\"],\r\n\t[\"Morocco\"],\r\n\t[\"Albania\"],\r\n\t[\"South Korea\"],\r\n\t[\"Kazakhstan\"],\r\n\t[\"Macedonia\"],\r\n\t[\"Venezuela\"],\r\n\t[\"Taiwan\"],\r\n\t[\"Qatar\"],\r\n\t[\"Jordan\"],\r\n\t[\"Iceland\"],\r\n\t[\"Guatemala\"],\r\n\t[\"Costa Rica\"],\r\n\t[\"Hong Kong\"],\r\n\t[\"San Marino\"],\r\n\t[\"Colombia\"],\r\n\t[\"Moldova\"],\r\n\t[\"Armenia\"],\r\n\t[\"Malta\"],\r\n\t[\"Nepal\"],\r\n\t[\"Lebanon\"],\r\n\t[\"Malaysia\"],\r\n\t[\"Serbia\"],\r\n\t[\"Peru\"],\r\n\t[\"Trinidad and Tobago\"],\r\n\t[\"Lithuania\"],\r\n\t[\"Estonia\"],\r\n\t[\"Georgia\"],\r\n\t[\"Iran\"],\r\n\t[\"Chile\"],\r\n\t[\"Chad\"],\r\n\t[\"South Sudan\"],\r\n\t[\"Latvia\"],\r\n\t[\"Thailand\"],\r\n\t[\"Egypt\"],\r\n\t[\"Slovenia\"],\r\n\t[\"Mexico\"],\r\n\t[\"Belarus\"],\r\n\t[\"Slovakia\"],\r\n\t[\"Sri Lanka\"],\r\n\t[\"Croatia\"],\r\n\t[\"Philippines\"],\r\n\t[\"Bangladesh\"],\r\n\t[\"Turkey\"],\r\n\t[\"Romania\"],\r\n\t[\"Italy\"],\r\n\t[\"South Africa\"],\r\n\t[\"Hungary\"],\r\n\t[\"Pakistan\"],\r\n\t[\"Portugal\"],\r\n\t[\"Ukraine\"],\r\n\t[\"Greece\"],\r\n\t[\"Oman\"],\r\n\t[\"Argentina\"],\r\n\t[\"Singapore\"],\r\n\t[\"Bulgaria\"],\r\n\t[\"Japan\"],\r\n\t[\"Czech Republic \"],\r\n\t[\"Ireland\"],\r\n\t[\"China\"],\r\n\t[\"Finland\"],\r\n\t[\"Brazil\"],\r\n\t[\"Norway\"],\r\n\t[\"Austria\"],\r\n\t[\"Denmark\"],\r\n\t[\"Belgium\"],\r\n\t[\"New Zealand\"],\r\n\t[\"Spain\"],\r\n\t[\"Switzerland\"],\r\n\t[\"Russia\"],\r\n\t[\"Poland\"],\r\n\t[\"Israel\"],\r\n\t[\"Sweden\"],\r\n\t[\"Netherlands\"],\r\n\t[\"France\"],\r\n\t['French Guiana'],\r\n\t[\"Australia\"],\r\n\t[\"Canada\"],\r\n\t[\"India\"],\r\n\t[\"Germany\"],\r\n\t[\"United Kingdom\"],\r\n\t[\"United States\"],\r\n\t[\"Unknown\"],\r\n\t[\"Suriname\"],\r\n\t[\"Svalbard\"],\r\n\t[\"Liberia\"],\r\n\t[\"Burkina Faso\"],\r\n\t[\"Republic of the Congo\"],\r\n\t[\"Sierra Leone\"],\r\n\t[\"Togo\"],\r\n\t[\"Eritrea\"],\r\n\t[\"North Korea\"],\r\n\t[\"Kosovo\"],\r\n\t[\"Skopje\"]\r\n]\r\nexport default countries;","import React from \"react\";\r\nimport { checkUserValidity } from \"../utility\";\r\nimport { Button, Col, Container, Form, Row, Card } from 'react-bootstrap';\r\nimport countries from '../data/countries.json'\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport moment from 'moment';\r\nimport CountryMap from \"../data/CountryMap\";\r\nimport GoogleCharts from \"../components/GoogleCharts\";\r\nimport allCountries from '../data/countriesForChart';\r\n\r\nclass HomePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.countries = countries;\r\n        this.state = {\r\n            input: '',\r\n            country: '',\r\n            filteredList: ''\r\n        }\r\n    }\r\n    // filter countries by input\r\n    searchTextChanged = (filter) => {\r\n        const filteredList = this.countries.filter((country) => {\r\n            return country.name.toLowerCase().includes(filter.toLowerCase())\r\n        })\r\n\r\n        this.setState({\r\n            filteredList: filteredList,\r\n            input: filter\r\n        })\r\n    }\r\n    // add to state the chosen country\r\n    chooseACountry = (country) => {\r\n        this.setState({\r\n            country: country,\r\n            filteredList: '',\r\n            input: country,\r\n            error: \"\"\r\n        })\r\n    }\r\n\r\n    // add to state  new map\r\n    addMap = () => {\r\n        const data = countries.find((curr) => curr.name === this.state.input)\r\n        //check if map alredy exist\r\n        if (this.props.list.find((curr) => curr.country === this.state.input)) {\r\n            this.setState({\r\n                error: `*you alredy have map of ${this.state.input} in your maps`\r\n            })\r\n        }\r\n\r\n        else if (data) {\r\n            const map = new CountryMap(\r\n                this.state.country,\r\n                data.country_code,\r\n                data.latlng[0],\r\n                data.latlng[1],\r\n                data.capital,\r\n                moment().format(\"MMM Do YYYY\"),\r\n                this.state.subTitle,\r\n                this.state.freeText,\r\n                this.props.user.email)\r\n            this.props.addMap(map);\r\n            window.location.href = '#/maps'\r\n\r\n        } else {\r\n            this.setState({\r\n                error: \"*please enter valid country\"\r\n            })\r\n        }\r\n    }\r\n\r\n    setParameters = (obj) => {\r\n        this.setState({\r\n            country: obj[0],\r\n            input: obj[0],\r\n            error: \"\"\r\n        })\r\n    }\r\n\r\n    updateData = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        checkUserValidity(this.props.user)\r\n        return (\r\n            <Container fluid className=\"screen p-maps\">\r\n                <Row cla>\r\n                    <Col className=\"list-bar\" sm=\"12\" md=\"4\" lg=\"3\">\r\n                        <Card className=\"list \">\r\n                            <Card.Header >Start to explorer:</Card.Header>\r\n                            <Card.Text className=\"search\">\r\n                                <SearchBox\r\n                                    search={this.state.input}\r\n                                    placeHolder={'Choose a country'}\r\n                                    result={this.state.filteredList}\r\n                                    onSearchChanged={this.searchTextChanged}\r\n                                    onResultSelected={this.chooseACountry}>\r\n                                </SearchBox>\r\n                                <div className=\"error\">{this.state.error}</div>\r\n\r\n                                <div>\r\n                                    <h4>{this.state.country}</h4>\r\n                                </div>\r\n                                <div className=\"data\">Date of create:{moment().format(\"MMM Do YYYY\")}</div>\r\n                                <Form >\r\n                                    <Form.Group>\r\n                                        <Form.Control\r\n                                            name=\"subTitle\"\r\n                                            type=\"text\"\r\n                                            placeholder=\"Add your own sub title\"\r\n                                            onChange={this.updateData}\r\n                                            value={this.state.subTitle} />\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Control\r\n                                            name = \"freeText\"\r\n                                            as=\"textarea\"\r\n                                            rows={3}\r\n                                            placeholder=\"Add Free text\"\r\n                                            onChange={this.updateData}\r\n                                            value={this.state.freeText} />\r\n                                    </Form.Group>\r\n                                    <Button type=\"button\"\r\n                                        variant=\"info\"\r\n                                        onClick={this.addMap}\r\n                                    >\r\n                                        Create a Map\r\n                            </Button>\r\n                                </Form>\r\n                            </Card.Text>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col sm=\"12\" md=\"8\" lg=\"9\" className=\"map-container\">\r\n                        <GoogleCharts\r\n                            setParameters={this.setParameters}\r\n                            data={allCountries}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Container >\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomePage;","export default __webpack_public_path__ + \"static/media/logo.5636fbfa.svg\";","import React from \"react\";\r\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../img/logo.svg';\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            pwd: ''\r\n        }\r\n    }\r\n\r\n    updatePassword = (e) => {\r\n        this.setState(\r\n            {\r\n                pwd: e.target.value\r\n            }\r\n        )\r\n    }\r\n\r\n    updateEmail = (e) => {\r\n        this.setState(\r\n            {\r\n                email: e.target.value\r\n            }\r\n        )\r\n    }\r\n\r\n    validateLogin = () => {\r\n        const validUser = this.props.userslist.find((user) => {\r\n            return (user.email === this.state.email && user.pwd === this.state.pwd)\r\n        });\r\n\r\n        if (validUser) {\r\n            this.props.login(validUser)\r\n            window.location.href = \"#/home\"\r\n        } else {\r\n            this.setState({\r\n                error: \"*User or Password incorect\"\r\n            })\r\n\r\n        }\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <Container fluid className=\"p-login\" >\r\n                <Row className=\"login-container\">\r\n                    <Col className=\"my-auto\" lg={{ span: 4, offset: 4 }} sm=\"12\">\r\n                        <Form className=\"sign-form\">\r\n                            <div className=\"head\">\r\n                                <div className=\"logo\"><img src={logo} alt=\"Logo\" /></div>\r\n                                <div className=\"sub-title\">Your journey starts here</div>\r\n\r\n                            </div>\r\n\r\n                            <Form.Group>\r\n                                <Form.Label>Email address</Form.Label>\r\n                                <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={this.updateEmail} value={this.state.email} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group  >\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type=\"password\" placeholder=\"Password\" onChange={this.updatePassword} value={this.state.pwd} />\r\n                                <div className=\"error\">{this.state.error}</div>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group >\r\n                                Dont have acount yet? Sign\r\n                                <Link to=\"/\"> here</Link>\r\n                            </Form.Group>\r\n\r\n                            <Button variant=\"info\" type=\"button\" sm={{ offset: 8 }} onClick={this.validateLogin}>\r\n                                Submit\r\n                            </Button >\r\n                        </Form>\r\n                    </Col>\r\n\r\n\r\n                </Row>\r\n            </Container>\r\n\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { Button, Col, Container, Form, Row } from 'react-bootstrap';\r\nimport logo from '../img/logo.svg';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Signup extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pwdError: \"\",\r\n            emailError: \"\",\r\n            nameError: \"\"\r\n        }\r\n    }\r\n\r\n    validateName = () => {\r\n        if (!this.state.name) {\r\n            this.setState({\r\n                nameError: \"*Please fill in this field\"\r\n            })\r\n        }\r\n\r\n        else {\r\n            this.setState({\r\n                nameError: \"\"\r\n            })\r\n            return true\r\n        }\r\n        return false;\r\n    }\r\n\r\n    validateEmail = () => {\r\n        let emailCheck = /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i;\r\n        if (!this.state.email) {\r\n            this.setState({\r\n                emailError: \"*Please fill in this field\"\r\n            })\r\n        }\r\n        else if (!emailCheck.test(this.state.email)) {\r\n            this.setState({\r\n                emailError: \"*Email is not valid.\"\r\n            })\r\n        } else if (this.props.users.find(user => user.email.localeCompare(this.state.email) === 0)) {\r\n            this.setState({\r\n                emailError: \"*Email already exists.\"\r\n            })\r\n        } else {\r\n            this.setState({\r\n                emailError: \"\"\r\n            })\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    validatePassword = () => {\r\n        if (!this.state.pwd) {\r\n            this.setState({\r\n                pwdError: \"*Please fill in this field\"\r\n            })\r\n        }\r\n        else if (this.state.pwd.length < 6) {\r\n            this.setState({\r\n                pwdError: \"*Password length must be at least 6 characters\"\r\n            })\r\n        }\r\n        else if (!this.state.pwd.localeCompare(this.state.pwdConfirm) === 0) {\r\n            this.setState({\r\n                pwd2Error: \"*Passwords don’t match.\"\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                pwdError: \"\",\r\n                pwd2Error: \"\"\r\n            })\r\n            return true\r\n        }\r\n        return false;\r\n    }\r\n\r\n    createNewUser = () => {\r\n        const nameValid = this.validateName();\r\n        const emailValid = this.validateEmail();\r\n        const passwordValid = this.validatePassword();\r\n\r\n        if (emailValid && passwordValid && nameValid) {\r\n\r\n            this.props.addUser({\r\n                email: this.state.email,\r\n                name: this.state.name,\r\n                pwd: this.state.pwd\r\n            })\r\n            window.location.href = \"#/home\";\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <Container fluid  >\r\n                <Row className=\"sign-container\">\r\n                    <Col lg={{ span: 4, offset: 7 }} md={{ span: 5, offset: 6 }} sm=\"12\" className=\"my-auto\">\r\n                        <Form className=\"sign-form p-sign\">\r\n                            <div className=\"head\">\r\n                                <div className=\"logo\"><img src={logo} alt=\"Logo\" /></div>\r\n                                <div className=\"sub-title\">Your journey starts here</div>\r\n\r\n                            </div>\r\n                            <div className=\"start\">Start to create your own trips by sign up </div>\r\n                            <Form.Group>\r\n\r\n                                <Form.Label name=\"name\">Name<div className=\"error\"></div></Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Add Name\"\r\n                                    onChange={(e) => this.setState({ name: e.target.value })} />\r\n                                <div className=\"error\">{this.state.nameError}</div>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group >\r\n                                <Form.Label name=\"email\">Email address<div className=\"error\"></div></Form.Label>\r\n                                <Form.Control type=\"email\" placeholder=\"Enter email\"\r\n                                    onChange={(e) => this.setState({ email: e.target.value })} />\r\n                                <div className=\"error\">{this.state.emailError}</div>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group >\r\n                                <Form.Label name=\"password\">Password<div className=\"error\"></div></Form.Label>\r\n                                <Form.Control type=\"password\" placeholder=\"Password\"\r\n                                    onChange={(e) => this.setState({ pwd: e.target.value })} />\r\n                                <div className=\"error\">{this.state.pwdError}</div>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group >\r\n                                <Form.Label name=\"password-confirm\">Password confirm<div className=\"error\"></div></Form.Label>\r\n                                <Form.Control type=\"password\" placeholder=\"Password\"\r\n                                    onChange={(e) => this.setState({ pwdConfirm: e.target.value })} />\r\n                                <div className=\"error\">{this.state.pwd2Error}</div>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                <div>Alredy have acount? click <Link to=\"/login\">Here</Link> </div>\r\n\r\n                            </Form.Group>\r\n\r\n                            <Col>\r\n                                <Button variant=\"info\" type=\"button\" onClick={this.createNewUser}>\r\n                                    Signup\r\n                                 </Button>\r\n                            </Col>\r\n                        </Form>\r\n                    </Col>\r\n\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Signup;","import React from \"react\";\r\nimport { Card, Col, Row, Container, ListGroup } from \"react-bootstrap\";\r\nimport GoogleCharts from \"../components/GoogleCharts\";\r\nimport { checkUserValidity } from \"../utility\";\r\n\r\nclass Maps extends React.Component {\r\n\r\n    goTo = (id) => {\r\n        window.location.href = `#/list/${id}`\r\n    }\r\n\r\n    createlist = () => {\r\n        return this.props.list.map((map) => {\r\n            return (<ListGroup.Item onClick={() => { this.goTo(map.code) }}>\r\n                <Card.Title>\r\n                    {map.country}\r\n                    <span>            </span>\r\n                    <span className=\"date\">\r\n                        {map.date}\r\n                    </span>\r\n                </Card.Title>\r\n                <Card.Subtitle>\r\n                    <span className=\"mb-2 text-muted\">{map.subTitle} </span>\r\n                </Card.Subtitle>\r\n                <Card.Text>\r\n                    {map.freeText}\r\n                </Card.Text>\r\n            </ListGroup.Item>)\r\n        })\r\n    }\r\n\r\n    makeListOfChosenCountries = (list) => {\r\n        return (list.map((curr) => [curr.country]))\r\n    }\r\n\r\n    setParameters = () => { }\r\n    render() {\r\n        checkUserValidity(this.props.user)\r\n        const list = this.createlist()\r\n        const ChosenCountries = [[\"countries\"]].concat(this.makeListOfChosenCountries(this.props.list));\r\n\r\n        return (\r\n            <Container fluid className=\"p-maps\">\r\n                <Row>\r\n                    <Col className=\"list-bar\" sm=\"12\" md=\"3\" lg=\"2\">\r\n                        <Card className=\"list\">\r\n                            <Card.Header className=\"title\">My World Maps</Card.Header>\r\n                            <ListGroup variant=\"flush\">\r\n                                {list}\r\n                            </ListGroup>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col sm=\"12\" md=\"9\" lg=\"10\" className=\"map-container\">\r\n                        <GoogleCharts className=\"my-auto\"\r\n                            setParameters={this.setParameters}\r\n                            data={ChosenCountries}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Maps;","import React from \"react\";\r\n\r\nclass Marker extends React.Component {\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"marker\">\r\n                <div className=\"marker-info\">{this.props.text}</div>\r\n                <div className={`marker-place ${this.props.category}`}></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Marker","import React from \"react\";\r\nimport GoogleMapReact from 'google-map-react';\r\nimport Marker from \"./Marker\";\r\n\r\nclass GMap extends React.Component {\r\n    \r\n    onMapClick = (e) => {\r\n    }\r\n\r\n    //create markers for the list of places\r\n    createMarkers = (places) => {\r\n        if (places) {\r\n            return places.map((place) => {\r\n                return (<Marker\r\n                    lat={place.lat}\r\n                    lng={place.lng}\r\n                    text={place.title}\r\n                    address={place.addres}\r\n                    category={place.category}\r\n                >\r\n                </Marker>)\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const markers = this.createMarkers(this.props.places)\r\n        return (\r\n            <div className=\"g-map\">\r\n                <GoogleMapReact\r\n                    bootstrapURLKeys={{ key: 'AIzaSyAehE6kMUhBdd8FMJ5A-3OVG1q6S3c5h-8' }}\r\n                    height={'100%'} width={'100%'}\r\n                    defaultCenter={this.props.center}\r\n                    defaultZoom={7}\r\n                    onClick={this.onMapClick}\r\n                >\r\n                    {markers}\r\n                </GoogleMapReact>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GMap;\r\n","import { v4 as uuidv4 } from 'uuid'\r\n\r\nclass Pin {\r\n    constructor(code, category, title, rate, address, freeText, lat, lng, email) {\r\n        this.code = code;\r\n        this.category = category;\r\n        this.title = title;\r\n        this.rate = rate;\r\n        this.address = address;\r\n        this.freeText = freeText;\r\n        this.lat = lat;\r\n        this.lng = lng;\r\n        this.email = email;\r\n        this.id = uuidv4();\r\n    }\r\n}\r\n\r\nexport default Pin;\r\n","import React from \"react\";\r\nimport ReactGoogleAutocomplete from \"react-google-autocomplete\";\r\nimport Geocode from \"react-geocode\";\r\n\r\nclass Autocomplete extends React.Component {\r\n    \r\n    render() {\r\n\r\n        return (\r\n            <div className=\"pac-container\">\r\n                <ReactGoogleAutocomplete\r\n                    apiKey={'AIzaSyAehE6kMUhBdd8FMJ5A-3OVG1q6S3c5h-8'}\r\n                    onPlaceSelected={(place) => {\r\n                        Geocode.setApiKey('AIzaSyAehE6kMUhBdd8FMJ5A-3OVG1q6S3c5h-8');\r\n                        Geocode.fromAddress(place.formatted_address).then(\r\n                            (response) => {\r\n                                const { lat, lng } = (response ? response.results[0].geometry.location : \"invalid\");\r\n                                this.setState({\r\n                                    adress: place.formatted_address,\r\n                                    marker: { lat, lng }\r\n                                })\r\n                                this.props.updateAdress(place.formatted_address, { lat, lng })\r\n                            }\r\n                        );\r\n                    }}\r\n                    options={{\r\n                        types: [[\"establishment\"], [\"address\"], [\"(region)\"]],\r\n                        componentRestrictions: { country: this.props.id }\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Autocomplete;","import React from \"react\";\r\nimport { Button, Form, Modal } from \"react-bootstrap\";\r\nimport Pin from \"../data/Pin\";\r\nimport Autocomplete from \"./Autocomplete\";\r\n\r\n\r\nclass AddPin extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title:\"\",\r\n            importance: \"1\"\r\n        }\r\n    }\r\n\r\n    changeImportance = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    updateAdress = (address, marker) => {\r\n        this.setState({\r\n            address: address,\r\n            marker: marker\r\n        })\r\n    }\r\n\r\n    addToMap = () => {\r\n        if( !this.state.address){\r\n            this.setState({\r\n                error:\"*Please enter valid address\"\r\n            })  \r\n        }\r\n        if (!this.state.category){\r\n            this.setState({\r\n                errorCategory:\"*Please choose category\"\r\n            })  \r\n        }\r\n        else{\r\n            const place = new Pin(\r\n                this.props.id,\r\n                this.state.category,\r\n                this.state.title,\r\n                this.state.importance,\r\n                this.state.address,\r\n                this.state.freeText,\r\n                this.state.marker.lat,\r\n                this.state.marker.lng,\r\n                this.props.user.email\r\n            )\r\n            this.props.addPlace(place)\r\n            this.props.handleClose(\"isModalOpen\")\r\n        }\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <Modal show={this.props.isModalOpen} onHide={()=>this.props.handleClose(\"isModalOpen\")}>\r\n                <Form >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Search for a place\r\n                    \r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n\r\n        <Modal.Body >\r\n        <Autocomplete\r\n            updateAdress={this.updateAdress}\r\n            id={this.props.id} >      \r\n        </Autocomplete> \r\n                   \r\n        <Form.Group className=\"add-error\">\r\n             <div className=\"error\">{this.state.error}</div>\r\n        </Form.Group>           \r\n        <Form.Group className=\"add-to-list\">\r\n            <Form.Control type=\"text\"\r\n                name=\"title\"\r\n                placeholder=\"My title\"\r\n                value={this.state.title}\r\n                onChange={this.changeImportance} />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n                <Form.Control as=\"select\"\r\n                    name=\"category\"\r\n                    onChange={this.changeImportance}\r\n                    value={this.state.category} custom>\r\n                    <option value=\"selectCategory\">Select Category</option>\r\n                    <option value=\"hotels\">hotels</option>\r\n                    <option value=\"market-place\">Market Place</option>\r\n                    <option value=\"restaurnts\">Restaurnts</option>\r\n                    <option value=\"sites\">Sites</option>\r\n                    <option value=\"shopping\">Shopping</option>\r\n                    <option value=\"transportation\">Transportation</option>\r\n                    <option value=\"\">**** Add your on category***</option>\r\n                </Form.Control>\r\n                <div className=\"error\">{this.state.errorCategory}</div>\r\n            </Form.Group>\r\n            <div className=\"importance\">\r\n                <div class=\"form-check\">\r\n                    <input class=\"form-check-input\" type=\"radio\" name=\"importance\" id=\"mostimportant\" \r\n                    value=\"1\" onClick={this.changeImportance} checked />\r\n                    <label class=\"form-check-label\" htmlFor=\"mostimportant\">\r\n                        Must visit\r\n                </label>\r\n                </div>\r\n                <div class=\"form-check\">\r\n                    <input class=\"form-check-input\" type=\"radio\" name=\"importance\" id=\"midimportant\" \r\n                    value=\"2\" onClick={this.changeImportance} checked={this.state.importance === \"2\"} />\r\n                    <label class=\"form-check-label\" htmlFor=\"midimportant\">\r\n                        Happy To visit\r\n                </label>\r\n                </div>\r\n                <div class=\"form-check\">\r\n                    <input class=\"form-check-input\" type=\"radio\" name=\"importance\" id=\"leastimportant\"\r\n                    value=\"3\" onClick={this.changeImportance} checked={this.state.importance === \"3\"} />\r\n                    <label class=\"form-check-label\" htmlFor=\"leastimportant\">\r\n                        Visit on time left\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                <Form.Control as=\"textarea\"\r\n                    rows={3}\r\n                    placeholder=\"Add Free text\"\r\n                    onChange={this.changeImportance}\r\n                    name=\"freeText\" />\r\n            </Form.Group>\r\n        </Modal.Body>\r\n\r\n    <Modal.Footer>\r\n        <Button type=\"button\"\r\n            variant=\"info\"\r\n            onClick={this.addToMap}>\r\n            Add to my list\r\n    </Button>\r\n    </Modal.Footer>\r\n</Form>\r\n</Modal>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default AddPin;\r\n\r\n\r\n","import React from \"react\";\r\nimport { Button, Card, Col, Container, Row, Modal, ListGroup } from \"react-bootstrap\";\r\nimport countries from '../data/countries.json'\r\nimport GMap from \"../components/GMap\";\r\nimport { checkUserValidity, getLatlngById } from \"../utility\";\r\nimport { withRouter } from \"react-router\";\r\nimport AddPin from \"../components/AddPin\";\r\n\r\nclass Lists extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.url = window.location.href;\r\n        this.id = this.props.match.params.id;\r\n        this.latlng = getLatlngById(this.id);\r\n        this.state = {\r\n            isModalOpen: false,\r\n            isMiniModalOpen: false,\r\n        }\r\n    }\r\n\r\n    createlist = () => {\r\n        return this.props.list.map((place) => {\r\n            if (place.code === this.id) {\r\n\r\n                return (<ListGroup.Item id=\"place.id\" onClick={() => { this.showItem(place) }}>\r\n                    <Card.Title>\r\n                        {place.title}\r\n                    </Card.Title>\r\n                    <Card.Subtitle>\r\n                        <span className=\"mb-2 text-muted\">{place.category} </span>\r\n                    </Card.Subtitle>\r\n                    <Card.Text>\r\n                        {place.freeText}\r\n                    </Card.Text>\r\n                </ListGroup.Item>)\r\n            }\r\n            return null\r\n        })\r\n    }\r\n\r\n    handleClose = (modalKind) => {\r\n        this.setState({\r\n            [modalKind]: false,\r\n        })\r\n    }\r\n\r\n\r\n    showItem = (place) => {\r\n        if (place) {\r\n            this.setState({\r\n                isMiniModalOpen: true,\r\n                place: place\r\n            })\r\n        }\r\n    }\r\n\r\n    chooseRate = (rate) => {\r\n        if (rate === 1) {\r\n            return \"Must visit\"\r\n        }\r\n        if (rate === 2) {\r\n            return \" Happy To visit \"\r\n        }\r\n        return \"Visit on time left\"\r\n    }\r\n\r\n    checkValidity = () => {\r\n        if (this.state.place) {\r\n            return (\r\n                <Modal show={this.state.isMiniModalOpen} onHide={() => this.handleClose(\"isMiniModalOpen\")}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>{this.state.place.title}</Modal.Title>\r\n                    </Modal.Header>\r\n\r\n                    <Modal.Body>\r\n                        <p><b>Category: </b>{this.state.place.category}</p>\r\n                        <p><b>Rate: </b>{this.chooseRate(this.state.place.rate)}</p>\r\n                        <p><b>Address: </b>{this.state.place.address}</p>\r\n                        <p>{this.state.place.freeText}</p>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            )\r\n\r\n        }\r\n    }\r\n    render() {\r\n        checkUserValidity(this.props.user)\r\n        const list = this.createlist();\r\n        const modalItem = this.checkValidity();\r\n\r\n        const title =countries.find(country =>{\r\n           return (country['country_code'] === this.id)}).name\r\n        return (\r\n            <Container fluid className =\"p-maps screen\">\r\n                {this.showItem()}\r\n                <Row >\r\n                    <Col className=\"list-bar\" sm=\"12\" md=\"3\" lg=\"3\">\r\n                        <Card className=\"list \">\r\n                            <div className=\"p-lists\">\r\n                                <Card.Header>\r\n                                    <div className=\"title\">{title}</div>\r\n                                </Card.Header>\r\n                                <ListGroup variant=\"flush\">\r\n                                    <Button  className=\"add-place\" type=\"button\"\r\n                                        variant=\"info\"\r\n                                        onClick={() => { this.setState({ isModalOpen: true }) }}\r\n                                    >\r\n                                        Add new Place\r\n                                     </Button>\r\n                                    {list}\r\n                                </ListGroup>\r\n                            </div>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col sm=\"12\" md=\"9\" lg=\"9\" className=\"gmap-container\">\r\n                        <GMap className=\"map-container my-auto\"\r\n                            center={this.latlng}\r\n                            places={this.props.list}\r\n                        ></GMap>\r\n                    </Col>\r\n                </Row>\r\n                <AddPin\r\n                    id={this.id}\r\n                    isModalOpen={this.state.isModalOpen}\r\n                    handleClose={this.handleClose}\r\n                    addPlace={this.props.addPlace}\r\n                    user={this.props.user}\r\n                />\r\n                {modalItem}\r\n            </Container>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Lists);","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { HashRouter, Route } from 'react-router-dom';\nimport AppNavbar from './components/AppNavbar';\nimport HomePage from './pages/HomePage';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Maps from './pages/Maps';\nimport Lists from './pages/Lists';\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    let usersData = [];\n    if (localStorage.localUsers) {\n      usersData = JSON.parse(localStorage.localUsers);\n    }\n\n    let mapsData = [];\n    if (localStorage.localMaps) {\n      mapsData = JSON.parse(localStorage.localMaps);\n    }\n\n    let placesData = [];\n    if (localStorage.localPlaces) {\n      placesData = JSON.parse(localStorage.localPlaces);\n    }\n\n    this.state = {\n      user: {\n        pwd: \"\",\n        email: \"\",\n        name: \"\"\n      },\n      userslist: usersData,\n      maps: mapsData,\n      places: placesData\n    }\n\n  }\n  // log out from app\n  logout = () => {\n    this.setState({\n      user: null\n    })\n\n  }\n  // update the user on the app\n  login = (user) => {\n    const maps = this.state.maps.filter(map => map.email === user.email)\n    const pins = this.state.places.filter(pin => pin.email === user.email)\n    this.setState({\n      user: user,\n      places: pins,\n      maps: maps\n    })\n  }\n  // add new user for list of users\n  addUser = (user) => {\n    const localUsersString = JSON.stringify(this.state.userslist.concat(user));\n\n    localStorage.localUsers = localUsersString\n\n    this.setState({\n      user: user,\n      userslist: this.state.userslist.concat(user)\n    })\n  }\n\n  // add new map to map list\n  addMap = (map) => {\n    const localMapsString = JSON.stringify(this.state.maps.concat(map));\n\n    localStorage.localMaps = localMapsString;\n    this.setState({\n      maps: this.state.maps.concat(map)\n    })\n  }\n\n  addPlace = (place) => {\n    const localPlacesString = JSON.stringify(this.state.places.concat(place));\n    localStorage.localPlaces = localPlacesString;\n    this.setState({\n      places: this.state.places.concat(place)\n    })\n\n\n  }\n\n  render() {\n    console.log(\"maps\", this.state.maps);\n    console.log(\"pins\", this.state.places);\n    return (\n      <HashRouter>\n        <Route exact path={['/home', '/maps', '/list/:id', '/edit-list/:id']}>\n          <AppNavbar exact\n            user={this.state.user}\n            logout={this.logout} />\n        </Route>\n\n        <Route exact path={'/home'}>\n          <HomePage\n            user={this.state.user}\n            addMap={this.addMap}\n            list={this.state.maps}\n          ></HomePage>\n        </Route>\n\n        <Route exact path={'/login'}>\n          <Login\n            userslist={this.state.userslist}\n            login={this.login}></Login>\n        </Route>\n\n        <Route exact path={'/'}>\n          <Signup\n            addUser={this.addUser}\n            users={this.state.userslist}>\n\n          </Signup>\n        </Route>\n\n        <Route exact path={'/maps'}>\n          <Maps\n            user={this.state.user}\n            list={this.state.maps}>\n          </Maps>\n        </Route>\n\n        <Route exact path={'/list/:id'}>\n          <Lists\n            user={this.state.user}\n            list={this.state.places}\n            addPlace={this.addPlace}>\n          </Lists>\n        </Route>\n\n      </HashRouter>\n\n    );\n  }\n}\n\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();"],"sourceRoot":""}